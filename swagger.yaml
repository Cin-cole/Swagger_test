openapi: 3.0.0
info:
  title: EasyRAG production API
  version: 2.0.0
paths:
  /api/v3/actions/chunking/:
    post:
      tags:
        - Data Processing API - Document Processing
      summary: Break reference/attachment to chunk
      operationId: chunking_api_v3_actions_chunking__post
      security:
        - MyHTTPBearer: []
      parameters:
        - name: input_type
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/InputFormat'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChunkingRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chunks'
              examples:
                json:
                  summary: json
                  value:
                    - label: COMPANY
                      properties:
                        companyName: default
                    - label: DOCUMENT
                      properties:
                        companyName: default
                        docName: ''
                        docType: plain/text
                    - label: PAGE
                      properties:
                        companyName: default
                        pageIdx: 0
                        parentDocName: ''
                        pageNumber: ''
                        pageName: ''
                        pageHeader: ''
                        pageFooter: ''
                        title: ''
                        uniIdx: default--page-0
                    - label: SECTION
                      properties:
                        companyName: default
                        parentDocName: ''
                        parentPageIdx: 0
                        sectionIdx: 0
                        currentIndex: 0
                        sectionHeading: ''
                        title: ''
                        text: '{''elements'': [{''container_number'': 0, ''role'': ''figure'', ''text'': '''', ''attributes'': {''bbox'': {''x0'': 24.89, ''top'': 20.67, ''x1'': 380.25, ''bottom'': 370.12}, ''extracted_texts'': [''='', ''血 . .'', ''-'', ''.'', ''.'', ''FOUNDED 1926 VGOVAJNRD''], ''path'': ''data/document-extract/docreader/0bfabbccb863463d96795672f7b5c971/2dd0f49b3ab8460f98c25f6880f96550.png''}}, {''container_number'': 0, ''role'': ''figure'', ''text'': '''', ''attributes'': {''bbox'': {''x0'': 1869.73, ''top'': 28.41, ''x1'': 2148.73, ''bottom'': 370.69}, ''extracted_texts'': [''SIGGRAPH ASIA 2024 . TOKYO''], ''path'': ''data/document-extract/docreader/0bfabbccb863463d96795672f7b5c971/bc82c2074ab7405faf0f916489afd500.png''}}, {''container_number'': 0, ''role'': ''section_header'', ''text'': ''Anime line art colorization by region matching\nusing region shape'', ''attributes'': {''bbox'': {''x0'': 821.29, ''top'': 124.78, ''x1'': 1356.55, ''bottom'': 184.58}}}, {''container_number'': 0, ''role'': ''section_header'', ''text'': ''Daisuke Nanya\r\n1, Kouki Yonezawa2'', ''attributes'': {''bbox'': {''x0'': 824.26, ''top'': 223.65, ''x1'': 1353.74, ''bottom'': 257.85}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''1Graduate School of Science and Technology, Meijo University, Japan\n2Faculty of Information Engineering, Meijo University, Japan'', ''attributes'': {''bbox'': {''x0'': 679.87, ''top'': 336.16, ''x1'': 1497.31, ''bottom'': 366.71}}}, {''container_number'': 0, ''role'': ''section_header'', ''text'': ''Method'', ''attributes'': {''bbox'': {''x0'': 1380.64, ''top'': 412.92, ''x1'': 1527.57, ''bottom'': 451.9}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''Abstract'', ''attributes'': {''bbox'': {''x0'': 296.54, ''top'': 412.92, ''x1'': 467.76, ''bottom'': 453}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''1. Extracting region information (from all regions contained in both images)'', ''attributes'': {''bbox'': {''x0'': 761.55, ''top'': 460.57, ''x1'': 2008.66, ''bottom'': 497.61}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''✓ Gathering information about each region including the centers of gravity, areas, \nand shape features.'', ''attributes'': {''bbox'': {''x0'': 805.32, ''top'': 550.53, ''x1'': 1129.07, ''bottom'': 584.01}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''⚫ This study introduces a colorization \nsystem for anime line art using a \nreference image.'', ''attributes'': {''bbox'': {''x0'': 76.65, ''top'': 550.53, ''x1'': 348.6, ''bottom'': 584.01}}}, {''container_number'': 0, ''role'': ''figure'', ''text'': '''', ''attributes'': {''bbox'': {''x0'': 786.93, ''top'': 586.12, ''x1'': 2132.98, ''bottom'': 715.5}, ''extracted_texts'': [''Area:  0 . 009'', ''ResNet34 [4]'', ''Shape features'', ''(512'', ''vectors) -'', ''(pre - trained)'', ''Center of gravity: '', ''565 . 0 , 0 .'', ''174''], ''path'': ''data/document-extract/docreader/0bfabbccb863463d96795672f7b5c971/c44e509498c949bfa444fe5526e52613.png''}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''⚫ The proposed system colors line art \nbased on the features of corresponding \nregions in the reference image.'', ''attributes'': {''bbox'': {''x0'': 76.65, ''top'': 680.15, ''x1'': 585.12, ''bottom'': 713.63}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''Introduction'', ''attributes'': {''bbox'': {''x0'': 262.8, ''top'': 761.1, ''x1'': 502.94, ''bottom'': 800.22}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''Background'', ''attributes'': {''bbox'': {''x0'': 32.12, ''top'': 812.45, ''x1'': 219.9, ''bottom'': 845.93}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''⚫ The coloring phase in anime production \nis essential but demands substantial \ntime and effort. '', ''attributes'': {''bbox'': {''x0'': 65.53, ''top'': 942.05, ''x1'': 329.95, ''bottom'': 969.7}}}, {''container_number'': 0, ''role'': ''figure'', ''text'': '''', ''attributes'': {''bbox'': {''x0'': 757.68, ''top'': 1111.5, ''x1'': 2141.98, ''bottom'': 1334.25}, ''extracted_texts'': [''𝐷 𝑝𝑜𝑖𝑛𝑡 :  the total difference '', ''𝐷 𝑐𝑒𝑛𝑡𝑒𝑟 : '', ''𝐷 𝑠ℎ𝑎𝑝𝑒 the sum of the absolute  : '', ''𝐷 𝑎𝑟𝑒𝑎 : '', ''the Manhattan '', ''the absolute '', ''Parameters:'', ''distance between '', ''between the distance '', ''differences between the '', ''difference in the '', ''0 :  . 001'', ''𝛼 1 ,  𝛼 2 '', ''the centers of '', ''from the both regions '', ''shape feature vectors of '', ''areas of the two '', ''𝛽 1 ,  𝛽 2'', ''1'', '': '', ''𝛾 1 ,  ,  𝛾 2'', ''gravity of the two '', ''to the region '', ''regions.'', ''i the  - th '', '' j and j - th '', ''regions.'', ''regions.'', ''associated with  𝐹1 𝐹1 .''], ''path'': ''data/document-extract/docreader/0bfabbccb863463d96795672f7b5c971/6fd947c47c974faa8c6b76ba7a5d15c8.png''}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''⚫ Interviews with Studio Trigger [1], a \nJapanese animation studio, coloring a \nsingle line art can take up to 30 min, \nresulting in considerable time spent by \nthe coloring staff.'', ''attributes'': {''bbox'': {''x0'': 65.53, ''top'': 1158.04, ''x1'': 352.36, ''bottom'': 1191.54}}}, {''container_number'': 0, ''role'': ''figure'', ''text'': '''', ''attributes'': {''bbox'': {''x0'': 1686.36, ''top'': 1329.75, ''x1'': 2044.11, ''bottom'': 1458}, ''extracted_texts'': [], ''path'': ''data/document-extract/docreader/0bfabbccb863463d96795672f7b5c971/e78478b6224945968d7b470d576deba1.png''}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''⚫ Anime images and their line art are \nsegmented into numerous regions with \neach region typically assigned a single \ncolor, except in specific cases.'', ''attributes'': {''bbox'': {''x0'': 66.5, ''top'': 1330.87, ''x1'': 566.11, ''bottom'': 1364.35}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''Purpose'', ''attributes'': {''bbox'': {''x0'': 32.12, ''top'': 1374.54, ''x1'': 161.32, ''bottom'': 1407.55}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''⚫ To minimize the time and effort involved \nin the coloring process.'', ''attributes'': {''bbox'': {''x0'': 67.33, ''top'': 1460.47, ''x1'': 446.77, ''bottom'': 1493.95}}}, {''container_number'': 0, ''role'': ''table'', ''text'': ''| Our method | 77.18% | 99.23% |\n| AnT | 75.25% | 99.44% |\n'', ''attributes'': {''bbox'': {''x0'': 802.68, ''top'': 2067.75, ''x1'': 1563.74, ''bottom'': 2238.75}, ''path'': ''data/document-extract/docreader/0bfabbccb863463d96795672f7b5c971/cfb5cfd4cc484b788095e9863ec28943.xlsx''}, ''cells'': [{''container_number'': 0, ''text'': ''Method'', ''row_indices'': [0], ''col_indices'': [0], ''col_header'': True, ''projected_row_header'': False, ''attributes'': {''bbox'': {''x0'': 25.32, ''top'': 7.25, ''x1'': 221.32, ''bottom'': 47.25}}}, {''container_number'': 0, ''text'': ''Region-based'', ''row_indices'': [0], ''col_indices'': [1], ''col_header'': True, ''projected_row_header'': False, ''attributes'': {''bbox'': {''x0'': 263.32, ''top'': 7.25, ''x1'': 493.32, ''bottom'': 47.25}}}, {''container_number'': 0, ''text'': ''Area-based'', ''row_indices'': [0], ''col_indices'': [2], ''col_header'': True, ''projected_row_header'': False, ''attributes'': {''bbox'': {''x0'': 537.32, ''top'': 7.25, ''x1'': 729.32, ''bottom'': 47.25}}}, {''container_number'': 0, ''text'': ''Our method'', ''row_indices'': [1], ''col_indices'': [0], ''col_header'': False, ''projected_row_header'': False, ''attributes'': {''bbox'': {''x0'': 25.32, ''top'': 64.25, ''x1'': 221.32, ''bottom'': 104.25}}}, {''container_number'': 0, ''text'': ''77.18%'', ''row_indices'': [1], ''col_indices'': [1], ''col_header'': False, ''projected_row_header'': False, ''attributes'': {''bbox'': {''x0'': 263.32, ''top'': 64.25, ''x1'': 493.32, ''bottom'': 104.25}}}, {''container_number'': 0, ''text'': ''99.23%'', ''row_indices'': [1], ''col_indices'': [2], ''col_header'': False, ''projected_row_header'': False, ''attributes'': {''bbox'': {''x0'': 537.32, ''top'': 64.25, ''x1'': 729.32, ''bottom'': 104.25}}}, {''container_number'': 0, ''text'': ''AnT'', ''row_indices'': [2], ''col_indices'': [0], ''col_header'': False, ''projected_row_header'': False, ''attributes'': {''bbox'': {''x0'': 25.32, ''top'': 121.25, ''x1'': 221.32, ''bottom'': 160.25}}}, {''container_number'': 0, ''text'': ''75.25%'', ''row_indices'': [2], ''col_indices'': [1], ''col_header'': False, ''projected_row_header'': False, ''attributes'': {''bbox'': {''x0'': 263.32, ''top'': 121.25, ''x1'': 493.32, ''bottom'': 160.25}}}, {''container_number'': 0, ''text'': ''99.44%'', ''row_indices'': [2], ''col_indices'': [2], ''col_header'': False, ''projected_row_header'': False, ''attributes'': {''bbox'': {''x0'': 537.32, ''top'': 121.25, ''x1'': 729.32, ''bottom'': 160.25}}}]}, {''container_number'': 0, ''role'': ''section_header'', ''text'': ''Related Work'', ''attributes'': {''bbox'': {''x0'': 248.22, ''top'': 1546.7, ''x1'': 518.99, ''bottom'': 1586.78}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''Graph correspondence-based coloring'', ''attributes'': {''bbox'': {''x0'': 30.57, ''top'': 1597.91, ''x1'': 650.33, ''bottom'': 1631.39}}}, {''container_number'': 0, ''role'': ''figure'', ''text'': '''', ''attributes'': {''bbox'': {''x0'': 761.06, ''top'': 1632.38, ''x1'': 2146.48, ''bottom'': 1906.88}, ''extracted_texts'': [''Reference image '', ''Colorized image '', ''Line art '', ''Error image''], ''path'': ''data/document-extract/docreader/0bfabbccb863463d96795672f7b5c971/580f797eaa7848a1a2ea3be4b0f8e5a0.png''}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''⚫ The method proposed in [2] does not \ncolor line art with colors that are not \ncontained in the reference image.'', ''attributes'': {''bbox'': {''x0'': 75.5, ''top'': 1727.51, ''x1'': 626.77, ''bottom'': 1760.99}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''⚫ Nevertheless, region correspondence is \ncalculated based on the node between \nregions, there is a concern that the \ncalculation time will be long.'', ''attributes'': {''bbox'': {''x0'': 75.5, ''top'': 1900.31, ''x1'': 542.17, ''bottom'': 1933.79}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''Neural network-based coloring'', ''attributes'': {''bbox'': {''x0'': 32.12, ''top'': 1943.51, ''x1'': 530.33, ''bottom'': 1976.99}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''⚫ The method proposed in [3] can color \neven if the composition of line art and \nreference images are not similar.'', ''attributes'': {''bbox'': {''x0'': 76.65, ''top'': 2073.13, ''x1'': 615.57, ''bottom'': 2106.61}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''⚫ Nevertheless, this method is unsuitable \nfor anime because a single region may \ncontain multiple colors.'', ''attributes'': {''bbox'': {''x0'': 75.5, ''top'': 2202.73, ''x1'': 457.06, ''bottom'': 2236.21}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''Approach'', ''attributes'': {''bbox'': {''x0'': 284.9, ''top'': 2287.88, ''x1'': 479.26, ''bottom'': 2331.37}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''⚫ We focus on anime images consisting \nof many regions and each region have a \nsingle color.'', ''attributes'': {''bbox'': {''x0'': 75.14, ''top'': 2425.48, ''x1'': 269.79, ''bottom'': 2458.98}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''⚫ Our method finds corresponding \nregions in the two images and colors \nthe line art with the color of the \ncorresponding region in the reference \nimage.'', ''attributes'': {''bbox'': {''x0'': 76.33, ''top'': 2643.02, ''x1'': 180.15, ''bottom'': 2674.99}}}, {''container_number'': 0, ''role'': ''section_header'', ''text'': ''Acknowledgements'', ''attributes'': {''bbox'': {''x0'': 185.04, ''top'': 2738.24, ''x1'': 579.12, ''bottom'': 2781.54}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''The dataset used in this work was provided by \nNational Institute of Informatics and Studio Trigger.'', ''attributes'': {''bbox'': {''x0'': 31.28, ''top'': 2821.82, ''x1'': 691.46, ''bottom'': 2847.88}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''2. Predicting regions (based on a cost function 𝐹)'', ''attributes'': {''bbox'': {''x0'': 760.32, ''top'': 720.03, ''x1'': 1586.63, ''bottom'': 757.07}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''✓ 𝐹1 determines the corresponding region in large regions (greater than 0.5% of the \ntotal area), and 𝐹2 determines the corresponding region in small regions.'', ''attributes'': {''bbox'': {''x0'': 804.39, ''top'': 806.43, ''x1'': 1999.54, ''bottom'': 844.96}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''✓ The cost function assesses the similarity between the i-th region in the line art \nand the j-th region in the reference image.'', ''attributes'': {''bbox'': {''x0'': 805.32, ''top'': 896.51, ''x1'': 1501.32, ''bottom'': 931.58}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''✓ Our method identifies the corresponding j-th region that minimized the cost \nfunction for the i-th region.'', ''attributes'': {''bbox'': {''x0'': 804.32, ''top'': 982.91, ''x1'': 1248.23, ''bottom'': 1016.39}}}, {''container_number'': 0, ''role'': ''caption'', ''text'': ''𝐹1(𝑖,𝑗) = exp(𝛼1 ∙ 𝐷𝑠ℎ𝑎𝑝𝑒) ∙ exp(𝛽1 ∙ 𝐷𝑎𝑟𝑒𝑎) ∙ exp(𝛾1 ∙ 𝐷𝑐𝑒𝑛𝑡𝑒𝑟)\n𝐹2(𝑖,𝑗) = exp(𝛼2 ∙ 𝐷𝑠ℎ𝑎𝑝𝑒) ∙ exp(𝛽2 ∙ 𝐷𝑎𝑟𝑒𝑎) ∙ exp(𝛾2 ∙ 𝐷𝑝𝑜𝑖𝑛𝑡)'', ''attributes'': {''bbox'': {''x0'': 989.85, ''top'': 1075.11, ''x1'': 1913.23, ''bottom'': 1113.18}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''3. Coloring'', ''attributes'': {''bbox'': {''x0'': 760.04, ''top'': 1334.81, ''x1'': 951.16, ''bottom'': 1368.29}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''✓ Coloring the regions in the line art with colors of \nthe corresponding regions in the reference image.'', ''attributes'': {''bbox'': {''x0'': 804.39, ''top'': 1421.2, ''x1'': 1625.1, ''bottom'': 1454.7}}}, {''container_number'': 0, ''role'': ''section_header'', ''text'': ''Result'', ''attributes'': {''bbox'': {''x0'': 1392.7, ''top'': 1505.28, ''x1'': 1516.2, ''bottom'': 1544.26}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''Colorization result'', ''attributes'': {''bbox'': {''x0'': 760.43, ''top'': 1556.48, ''x1'': 1054, ''bottom'': 1584.14}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''⚫ Our dataset [5] is a real animated work [6].'', ''attributes'': {''bbox'': {''x0'': 761.22, ''top'': 1596.58, ''x1'': 1516.65, ''bottom'': 1630.74}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''Accuracy rate'', ''attributes'': {''bbox'': {''x0'': 759.39, ''top'': 1902.58, ''x1'': 979.92, ''bottom'': 1935.59}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''⚫ We compared the accuracy rates with existing methods (AnT) [7], implemented \nas Cadmium [8]. These accuracy rates are the averages for 57 colorized images.'', ''attributes'': {''bbox'': {''x0'': 805.32, ''top'': 1985.5, ''x1'': 2126.32, ''bottom'': 2022.11}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''⚫ We generated 62 images from 31 cuts, but AnT was unable to colorize 5 images.'', ''attributes'': {''bbox'': {''x0'': 761.22, ''top'': 2031.71, ''x1'': 2127.04, ''bottom'': 2065.19}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''These colorized images are the \nprevious one frame and the next one \nframe of the reference.'', ''attributes'': {''bbox'': {''x0'': 1577.87, ''top'': 2181.74, ''x1'': 1912.98, ''bottom'': 2206.32}}}, {''container_number'': 0, ''role'': ''section_header'', ''text'': ''Conclusion'', ''attributes'': {''bbox'': {''x0'': 1342.78, ''top'': 2284.71, ''x1'': 1564.92, ''bottom'': 2327.04}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''⚫ Our method can assist users in coloring line arts.'', ''attributes'': {''bbox'': {''x0'': 761.22, ''top'': 2338.53, ''x1'': 1610.9, ''bottom'': 2372.01}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''⚫ We confirmed that our method tends to color large regions correctly.'', ''attributes'': {''bbox'': {''x0'': 761.22, ''top'': 2381.73, ''x1'': 1932.41, ''bottom'': 2415.21}}}, {''container_number'': 0, ''role'': ''section_header'', ''text'': ''References'', ''attributes'': {''bbox'': {''x0'': 1338.22, ''top'': 2484.5, ''x1'': 1568.86, ''bottom'': 2523.48}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''[1] Trigger, Inc., TRIGGER official website, https://www.st-trigger.co.jp/.'', ''attributes'': {''bbox'': {''x0'': 767.9, ''top'': 2535.12, ''x1'': 1458.18, ''bottom'': 2555.44}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''[2] T. Do et al., Anime sketch colorization by component-based matching using deep appearance features and graph representation, International \nConference on Pattern Recognition, pp. 3154-3161, 2020.'', ''attributes'': {''bbox'': {''x0'': 823.34, ''top'': 2592.06, ''x1'': 1347.24, ''bottom'': 2610.64}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''[3] Y. Cao et al., Attention-Aware Anime Line Drawing Colorization, IEEE International Conference on Multimedia and Expo, pp. 1637-1642, 2023.'', ''attributes'': {''bbox'': {''x0'': 767.9, ''top'': 2621.52, ''x1'': 2122.28, ''bottom'': 2641.84}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''[4] K. He et al., Deep Residual Learning for Image Recognition, IEEE Conference on Computer Vision and Pattern Recognition, pp. 770-'', ''attributes'': {''bbox'': {''x0'': 767.9, ''top'': 2652.72, ''x1'': 2031.57, ''bottom'': 2673.04}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''TRIGGER, Y. Yoshinari, GOOD SMILE COMPANY, “Little Witch Academia: The Enchanted Parade” official website, \nhttp://littlewitchacademia.jp/.'', ''attributes'': {''bbox'': {''x0'': 823.94, ''top'': 2739.44, ''x1'': 1099.7, ''bottom'': 2759.44}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''E. Casey et al., The Animation Transformer: Visual Correspondence via Segment Matching, IEEE/CVF International Conference on Computer \nVision, pp. 11303-11312, 2021.'', ''attributes'': {''bbox'': {''x0'': 822.76, ''top'': 2796.32, ''x1'': 1102.49, ''bottom'': 2814.64}}}, {''container_number'': 0, ''role'': ''text'', ''text'': ''[8] Cadmium, Cadmium App, https://cadmium.app/.'', ''attributes'': {''bbox'': {''x0'': 767.9, ''top'': 2825.52, ''x1'': 1270.49, ''bottom'': 2845.84}}}], ''containers'': [{''container_number'': 1, ''width'': 2176.98, ''height'': 2880}], ''file_format'': ''.pdf'', ''file_name'': ''data/document-extract/docreader/0bfabbccb863463d96795672f7b5c971/95fc11877853453f9ed5faca5f978d67.pdf''}'
                        pageHeader: ''
                        pageFooter: ''
                        uniIdx: default--page-0-section-0-0
                        vectordbIds: []
                plaintext:
                  summary: plaintext
                  value:
                    - label: COMPANY
                      properties:
                        companyName: default
                    - label: DOCUMENT
                      properties:
                        companyName: default
                        docName: ''
                        docType: plain/text
                    - label: PAGE
                      properties:
                        companyName: default
                        pageIdx: 0
                        parentDocName: ''
                        pageNumber: ''
                        pageName: ''
                        pageHeader: ''
                        pageFooter: ''
                        title: ''
                        uniIdx: default--page-0
                    - label: SECTION
                      properties:
                        companyName: default
                        parentDocName: ''
                        parentPageIdx: 0
                        sectionIdx: 0
                        currentIndex: 0
                        sectionHeading: ''
                        title: ''
                        text: Today is a beautiful day
                        pageHeader: ''
                        pageFooter: ''
                        uniIdx: default--page-0-section-0-0
                        vectordbIds: []
        '401':
          content:
            application/json:
              example:
                message: invalid access token
                code: InvalidAccessTokenError
              schema:
                $ref: '#/components/schemas/ErrorResponseWithCode'
          description: Unauthorized
        '403':
          content:
            application/json:
              example:
                message: not authenticated
                code: UnauthenticatedError
              schema:
                $ref: '#/components/schemas/ErrorResponseWithCode'
          description: Forbidden
        '422':
          content:
            application/json:
              example:
                message: 'body.field1.field2: field required, ...'
                code: ValidationError
              schema:
                $ref: '#/components/schemas/ErrorResponseWithCode'
          description: Unprocessable Entity
  /api/v3.3/actions/chunking/:
    post:
      tags:
        - Data Processing API 3.3 - Document Processing
      summary: Break reference/attachment to chunk
      operationId: chunking_api_v3.3_actions_chunking__post
      parameters:
        - name: input_type
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/ChunkingInputType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChunkingPayloadRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/DocumentComponent'
                    - $ref: '#/components/schemas/TOCComponent'
                    - $ref: '#/components/schemas/PageComponent'
                    - $ref: '#/components/schemas/SectionComponent'
                    - $ref: '#/components/schemas/TableComponent'
                    - $ref: '#/components/schemas/DiagramComponent'
                    - $ref: '#/components/schemas/UnstructuredComponent'
                    - $ref: '#/components/schemas/FAQComponent'
                    - $ref: '#/components/schemas/DictionaryComponent'
                  discriminator:
                    propertyName: label
                    mapping:
                      DOCUMENT: '#/components/schemas/DocumentComponent'
                      TABLEOFCONTENTS: '#/components/schemas/TOCComponent'
                      PAGE: '#/components/schemas/PageComponent'
                      SECTION: '#/components/schemas/SectionComponent'
                      TABLE: '#/components/schemas/TableComponent'
                      DIAGRAM: '#/components/schemas/DiagramComponent'
                      FREETEXT: '#/components/schemas/UnstructuredComponent'
                      FAQ: '#/components/schemas/FAQComponent'
                      DICTIONARY: '#/components/schemas/DictionaryComponent'
                title: Response Chunking Ai V3 Actions Chunking  Post
        '401':
          content:
            application/json:
              example:
                message: invalid access token
                code: InvalidAccessTokenError
              schema:
                $ref: '#/components/schemas/ErrorResponseWithCode'
          description: Unauthorized
        '403':
          content:
            application/json:
              example:
                message: not authenticated
                code: UnauthenticatedError
              schema:
                $ref: '#/components/schemas/ErrorResponseWithCode'
          description: Forbidden
        '422':
          content:
            application/json:
              example:
                message: 'body.field1.field2: field required, ...'
                code: ValidationError
              schema:
                $ref: '#/components/schemas/ErrorResponseWithCode'
          description: Unprocessable Entity
                
  /api/v3/actions/document-extract/:
    post:
      tags:
        - Data Processing API - Document Processing
      summary: Extract content from reference/attachment
      operationId: Document Extractor
      parameters:
        - name: output_type
          in: query
          required: true
          schema:
            type: string
            enum:
              - json
              - markdown
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_create_attachment_api_v3_attachments__post'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  file_name:
                    type: string
                  file_format:
                    type: string
                  markdown:
                    type: string
                    default: null
                  elements:
                    type: array
                    items:
                      type: object
                      properties:
                        container_number:
                          type: integer
                        role:
                          type: string
                        text:
                          type: string
                        attributes:
                          type: object
                          properties:
                            bbox:
                              type: object
                              properties:
                                top:
                                  type: number
                                bottom:
                                  type: number
                                left:
                                  type: number
                                right:
                                  type: number
                            path:
                              type: string
                  containers:
                    type: array
                    items:
                      type: object
                      properties:
                        container_number:
                          type: integer
                        width:
                          type: number
                        height:
                          type: number
                        attributes:
                          type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithCode'
              example:
                message: invalid access token
                code: UnauthorizedError
        '403':
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithCode'
              example:
                message: not authenticated
                code: UnauthenticatedError
        '422':
          description: File Upload Error
          content:
            application/json:
              examples:
                FileUploadError:
                  summary: File Upload Error
                  value:
                    code: FileUploadError
                    message: 'File Error: {message}'
              schema:
                $ref: '#/components/schemas/ErrorResponseWithCode'
        '500':
          description: Internal Server Error
          content:
            application/json:
              examples:
                InternalServerError:
                  summary: Internal Server Error
                  value:
                    code: InternalServerError
                    message: internal server error, contact the dev to fix it
              schema:
                $ref: '#/components/schemas/ErrorResponseWithCode'
  /api/v3.3/actions/document-extract/:
    post:
      tags:
        - Data Processing API 3.3 - Document Processing
      summary: Extract content from reference/attachment
      operationId: extract_ai_v3.3_actions_document_extract__post
      parameters:
        - name: output_type
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/ExtractorResponseType'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_extract_ai_v3.3_actions_document_extract__post'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                anyOf:
                  - oneOf:
                      - $ref: '#/components/schemas/ReferencesAdaptiveResponse'
                      - $ref: '#/components/schemas/PowerPointAdaptiveResponse'
                      - $ref: '#/components/schemas/ImageAdaptiveResponse'
                    discriminator:
                      propertyName: spec_type
                      mapping:
                        references: '#/components/schemas/ReferencesAdaptiveResponse'
                        powerpoint: '#/components/schemas/PowerPointAdaptiveResponse'
                        image: '#/components/schemas/ImageAdaptiveResponse'
                  - $ref: '#/components/schemas/StructuredResponseMarkdown'
                title: Response Extract Ai V3 Actions Document Extract  Post
              example:
                spectype: references
                elements:
                  - role: section
                    pageidx: 0
                    globalidx: 1
                    contents:
                      - "Introduction"
                      - "This is the introduction section content."
                    attributes:
                      bbox:
                        top: 72
                        left: 48
                        bottom: 300
                        right: 600
                    paragraphs:
                      - "Introduction"
                      - "This is the introduction section content."
                  - role: table
                    pageidx: 1
                    globalidx: 2
                    contents:
                      - "Table Header"
                      - "Row 1"
                      - "Row 2"
                    attributes:
                      bbox:
                        top: 320
                        left: 60
                        bottom: 450
                        right: 700
                    numcolumn: 3
                    numrow: 2
                    cells:
                      - rowindices: [0]
                        colindices: [0]
                        content: "Header 1"
                      - rowindices: [1]
                        colindices: [0]
                        content: "Value 1"
                pages:
                  - pageidx: 0
                    name: "Page 1"
                    width: 1024
                    height: 768
                    titles: ["Sample Document"]
                    headers: ["Company Confidential"]
                    footers: ["Page 1"]
                dynamicfields:
                  xpaths: {}
                  tableofcontents: null
                  hastable: false
                filename: "sample.pdf"
                fileformat: "pdf"

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithCode'
              example:
                message: invalid access token
                code: UnauthorizedError
        '403':
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithCode'
              example:
                message: not authenticated
                code: UnauthenticatedError
        '422':
          description: File Upload Error
          content:
            application/json:
              examples:
                FileUploadError:
                  summary: File Upload Error
                  value:
                    code: FileUploadError
                    message: 'File Error: {message}'
              schema:
                $ref: '#/components/schemas/ErrorResponseWithCode'
        '500':
          description: Internal Server Error
          content:
            application/json:
              examples:
                InternalServerError:
                  summary: Internal Server Error
                  value:
                    code: InternalServerError
                    message: internal server error, contact the dev to fix it
              schema:
                $ref: '#/components/schemas/ErrorResponseWithCode'
components:
  schemas:
    Body_create_attachment_api_v3_attachments__post:
      properties:
        file:
          type: string
          format: binary
          title: File
      type: object
      required:
        - file
      title: Body_create_attachment_api_v3_attachments__post
    ErrorResponseWithCode:
      properties:
        message:
          type: string
          title: Message
        code:
          anyOf:
            - type: string
            - nullable: true
          title: Code
      type: object
      required:
        - message
      title: ErrorResponseWithCode
    Company:
      properties:
        companyName:
          type: string
          title: Companyname
      type: object
      required:
        - companyName
      title: Company
    Diagram:
      properties:
        companyName:
          type: string
          title: Companyname
        parentDocName:
          type: string
          title: Parentdocname
        parentPageIdx:
          type: integer
          title: Parentpageidx
        diagramIdx:
          type: integer
          title: Diagramidx
        text:
          type: string
          title: Text
          default: ''
        imagePath:
          type: string
          title: Imagepath
          default: ''
        uniIdx:
          type: string
          title: Uniidx
          default: ''
        vectordbIds:
          items:
            type: string
          type: array
          title: Vectordbids
          default: []
      type: object
      required:
        - companyName
        - parentDocName
        - parentPageIdx
        - diagramIdx
      title: Diagram
    InputFormat:
      type: string
      enum:
        - json
        - plaintext
      title: InputFormat
    ChunkingRequest:
      properties:
        text:
          anyOf:
            - type: object
            - type: string
          title: Text
        company_name:
          anyOf:
            - type: string
            - nullable: true
          title: Company Name
        doc_name:
          anyOf:
            - type: string
            - nullable: true
          title: Doc Name
      type: object
      required:
        - text
      title: ChunkingRequest
    Chunks:
      items:
        oneOf:
          - $ref: '#/components/schemas/CompanyChunk'
          - $ref: '#/components/schemas/DocumentChunk'
          - $ref: '#/components/schemas/TOCChunk'
          - $ref: '#/components/schemas/PageChunk'
          - $ref: '#/components/schemas/SectionChunk'
          - $ref: '#/components/schemas/TableChunk'
          - $ref: '#/components/schemas/DiagramChunk'
          - $ref: '#/components/schemas/QAChunk'
          - $ref: '#/components/schemas/UnstructuredChunk'
        discriminator:
          propertyName: label
          mapping:
            COMPANY: '#/components/schemas/CompanyChunk'
            DIAGRAM: '#/components/schemas/DiagramChunk'
            DOCUMENT: '#/components/schemas/DocumentChunk'
            FREETEXT: '#/components/schemas/UnstructuredChunk'
            PAGE: '#/components/schemas/PageChunk'
            QA: '#/components/schemas/QAChunk'
            SECTION: '#/components/schemas/SectionChunk'
            TABLE: '#/components/schemas/TableChunk'
            TABLEOFCONTENTS: '#/components/schemas/TOCChunk'
      type: array
      title: Chunks
    CompanyChunk:
      properties:
        label:
          type: string
          enum: [COMPANY]
          title: Label
          default: COMPANY
        properties:
          $ref: '#/components/schemas/Company'
      type: object
      required:
        - properties
      title: CompanyChunk
    DocumentChunk:
      properties:
        label:
          type: string
          enum: [DOCUMENT]
          title: Label
          default: DOCUMENT
        properties:
          $ref: '#/components/schemas/app__api__v3__payload__actions__chunking__Document'
      type: object
      required:
        - properties
      title: DocumentChunk
    TOCChunk:
      properties:
        label:
          type: string
          enum: [TABLEOFCONTENTS]
          title: Label
          default: TABLEOFCONTENTS
        properties:
          $ref: '#/components/schemas/TOC'
      type: object
      required:
        - properties
      title: TOCChunk
    PageChunk:
      properties:
        label:
          type: string
          enum: [PAGE]
          title: Label
          default: PAGE
        properties:
          $ref: '#/components/schemas/Page'
      type: object
      required:
        - properties
      title: PageChunk
    SectionChunk:
      properties:
        label:
          type: string
          enum: [SECTION]
          title: Label
          default: SECTION
        properties:
          $ref: '#/components/schemas/Section'
      type: object
      required:
        - properties
      title: SectionChunk
    TableChunk:
      properties:
        label:
          type: string
          enum: [TABLE]
          title: Label
          default: TABLE
        properties:
          $ref: '#/components/schemas/app__api__v3__payload__actions__chunking__Table'
      type: object
      required:
        - properties
      title: TableChunk
    DiagramChunk:
      properties:
        label:
          type: string
          enum: [DIAGRAM]
          title: Label
          default: DIAGRAM
        properties:
          $ref: '#/components/schemas/Diagram'
      type: object
      required:
        - properties
      title: DiagramChunk
    QAChunk:
      properties:
        label:
          type: string
          enum: [QA]
          title: Label
          default: QA
        properties:
          $ref: '#/components/schemas/QA'
      type: object
      required:
        - properties
      title: QAChunk
    UnstructuredChunk:
      properties:
        label:
          type: string
          enum: [FREETEXT]
          title: Label
          default: FREETEXT
        properties:
          $ref: '#/components/schemas/FreeText'
      type: object
      required:
        - properties
      title: UnstructuredChunk
      
    DocumentComponent:
      properties:
        label:
          type: string
          enum: [DOCUMENT]
          title: Label
          default: DOCUMENT
        properties:
          $ref: '#/components/schemas/Document'
      type: object
      required:
        - properties
      title: DocumentComponent
    Document:
      properties:
        reference_id:
          type: string
          title: Reference Id
        doc_type:
          $ref: '#/components/schemas/DocumentType'
        text:
          type: string
          title: Text
          default: ''
        doc_name:
          type: string
          title: Doc Name
          default: ''
      type: object
      required:
        - reference_id
      title: Document
    DocumentType:
      type: string
      enum:
        - text
        - text_with_table_contents
        - structured
        - pptx
        - faq
        - dictionary
        - image
        - others
      default: structured
      title: DocumentType
    ChunkingInputType:
      type: string
      enum:
        - plain_text
        - json
      title: ChunkingInputType
    ChunkingPayloadRequest:
      properties:
        text:
          anyOf:
            - type: object
            - type: string
          title: Text
        company_name:
          anyOf:
            - type: string
              nullable: true
          title: Company Name
        doc_name:
          anyOf:
            - type: string
              nullable: true
          title: Doc Name
      type: object
      required:
        - text
      title: ChunkingPayloadRequest
      
    TOCComponent:
      properties:
        label:
          type: string
          enum: [TABLEOFCONTENTS]
          title: Label
          default: TABLEOFCONTENTS
        properties:
          $ref: '#/components/schemas/TOC'
      type: object
      required:
        - properties
      title: TOCComponent
    PageComponent:
      properties:
        label:
          type: string
          enum: [PAGE]
          title: Label
          default: PAGE
        properties:
          $ref: '#/components/schemas/kncore__structs__datamodel__Page'
      type: object
      required:
        - properties
      title: PageComponent
    SectionComponent:
      properties:
        label:
          type: string
          enum: [SECTION]
          title: Label
          default: SECTION
        properties:
          $ref: '#/components/schemas/kncore__structs__datamodel__Section'
      type: object
      required:
        - properties
      title: SectionComponent
    TableComponent:
      properties:
        label:
          type: string
          enum: [TABLE]
          title: Label
          default: TABLE
        properties:
          $ref: '#/components/schemas/kncore__structs__datamodel__Table'
      type: object
      required:
        - properties
      title: TableComponent
    DiagramComponent:
      properties:
        label:
          type: string
          enum: [DIAGRAM]
          title: Label
          default: DIAGRAM
        properties:
          $ref: '#/components/schemas/Diagram'
      type: object
      required:
        - properties
      title: DiagramComponent
    UnstructuredComponent:
      properties:
        label:
          type: string
          enum: [FREETEXT]
          title: Label
          default: FREETEXT
        properties:
          $ref: '#/components/schemas/kncore__structs__datamodel__Section'
      type: object
      required:
        - properties
      title: UnstructuredComponent
    FAQComponent:
      properties:
        label:
          type: string
          enum: [FAQ]
          title: Label
          default: FAQ
        properties:
          $ref: '#/components/schemas/FAQ'
      type: object
      required:
        - properties
      title: FAQComponent
    DictionaryComponent:
      properties:
        label:
          type: string
          enum: [DICTIONARY]
          title: Label
          default: DICTIONARY
        properties:
          $ref: '#/components/schemas/Dictionary'
      type: object
      required:
        - properties
      title: DictionaryComponent
    
    
    
    
      
    app__api__v3__payload__actions__chunking__Document:
      properties:
        companyName:
          type: string
          title: Companyname
        docName:
          type: string
          title: Docname
        docType:
          type: string
          title: Doctype
          default: structured
      type: object
      required:
        - companyName
        - docName
      title: Document
    app__api__v3__payload__actions__chunking__Table:
      properties:
        companyName:
          type: string
          title: Companyname
        parentDocName:
          type: string
          title: Parentdocname
        parentPageIdx:
          type: integer
          title: Parentpageidx
        tableIdx:
          type: integer
          title: Tableidx
        text:
          type: string
          title: Text
          default: ''
        uniIdx:
          type: string
          title: Uniidx
          default: ''
        vectordbIds:
          items:
            type: string
          type: array
          title: Vectordbids
      type: object
      required:
        - companyName
        - parentDocName
        - parentPageIdx
        - tableIdx
      title: Table
    kncore__structs__datamodel__Section:
      properties:
        reference_id:
          type: string
          title: Reference Id
          default: ''
        doc_name:
          type: string
          title: Doc Name
          default: ''
        page_idx:
          type: integer
          title: Page Idx
          default: 0
        section_idx:
          type: integer
          title: Section Idx
          default: 0
        current_index:
          type: integer
          title: Current Index
          default: 0
        section_heading:
          type: string
          title: Section Heading
          default: ''
        title:
          type: string
          title: Title
          default: ''
        text:
          type: string
          title: Text
          default: ''
        page_header:
          type: string
          title: Page Header
          default: ''
        page_footer:
          type: string
          title: Page Footer
          default: ''
        unique_idx:
          type: string
          title: Unique Idx
          default: ''
        vectordb_ids:
          items:
            type: string
          type: array
          title: Vectordb Ids
      type: object
      title: Section
    kncore__structs__datamodel__Table:
      properties:
        reference_id:
          type: string
          title: Reference Id
        doc_name:
          type: string
          title: Doc Name
          default: ''
        page_idx:
          type: integer
          title: Page Idx
        table_idx:
          type: integer
          title: Table Idx
        text:
          type: string
          title: Text
          default: ''
        unique_idx:
          type: string
          title: Unique Idx
          default: ''
        vectordb_ids:
          items:
            type: string
          type: array
          title: Vectordb Ids
      type: object
      required:
        - reference_id
        - page_idx
        - table_idx
      title: Table

      
    Body_extract_ai_v3.3_actions_document_extract__post:
      properties:
        file:
          type: string
          format: binary
          title: File
      type: object
      required:
        - file
      title: Body_extract_ai_v3.3_actions_document_extract__post
      
    TOC:
      properties:
        companyName:
          type: string
          title: Companyname
        parentDocName:
          type: string
          title: Parentdocname
        text:
          type: string
          title: Text
          default: ''
        uniIdx:
          type: string
          title: Uniidx
          default: ''
      type: object
      required:
        - companyName
        - parentDocName
      title: TOC
    Page:
      properties:
        companyName:
          type: string
          title: Companyname
        pageIdx:
          type: integer
          title: Pageidx
          default: 0
        parentDocName:
          type: string
          title: Parentdocname
          default: ''
        pageNumber:
          type: string
          title: Pagenumber
          default: ''
        pageName:
          type: string
          title: Pagename
          default: ''
        pageHeader:
          type: string
          title: Pageheader
          default: ''
        pageFooter:
          type: string
          title: Pagefooter
          default: ''
        title:
          type: string
          title: Title
          default: ''
        uniIdx:
          type: string
          title: Uniidx
          default: ''
      type: object
      required:
        - companyName
      title: Page
    Section:
      properties:
        companyName:
          type: string
          title: Companyname
        parentDocName:
          type: string
          title: Parentdocname
          default: ''
        parentPageIdx:
          type: integer
          title: Parentpageidx
          default: 0
        sectionIdx:
          type: integer
          title: Sectionidx
          default: 0
        currentIndex:
          type: integer
          title: Currentindex
          default: 0
        sectionHeading:
          type: string
          title: Sectionheading
          default: ''
        title:
          type: string
          title: Title
          default: ''
        text:
          type: string
          title: Text
          default: ''
        pageHeader:
          type: string
          title: Pageheader
          default: ''
        pageFooter:
          type: string
          title: Pagefooter
          default: ''
        uniIdx:
          type: string
          title: Uniidx
          default: ''
        vectordbIds:
          items:
            type: string
          type: array
          title: Vectordbids
      type: object
      required:
        - companyName
      title: Section
    QA:
      properties:
        companyName:
          type: string
          title: Companyname
        qaIdx:
          type: integer
          title: Qaidx
        text:
          type: string
          title: Text
          default: ''
        embedding:
          $ref: '#/components/schemas/Embedding'
        uniIdx:
          type: string
          title: Uniidx
          default: ''
        vectordbIds:
          items:
            type: string
          type: array
          title: Vectordbids
      type: object
      required:
        - companyName
        - qaIdx
        - embedding
      title: QA
    FreeText:
      properties:
        companyName:
          type: string
          title: Companyname
        metadata:
          type: object
          title: Metadata
        text:
          type: string
          title: Text
      type: object
      required:
        - companyName
        - metadata
        - text
      title: FreeText
    Embedding:
      items:
        type: number
      type: array
    FAQ:
      properties:
        faq_idx:
          type: integer
          title: Faq Idx
        text:
          type: string
          title: Text
          default: ''
        reference_id:
          type: string
          title: Reference Id
          default: ''
        page_idx:
          type: integer
          title: Page Idx
          default: 0
        doc_name:
          type: string
          title: Doc Name
          default: ''
      type: object
      required:
        - faq_idx
      title: FAQ
    Dictionary:
      properties:
        dictionary_idx:
          type: integer
          title: Dictionary Idx
        text:
          type: string
          title: Text
          default: ''
        reference_id:
          type: string
          title: Reference Id
          default: ''
        page_idx:
          type: integer
          title: Page Idx
          default: 0
        doc_name:
          type: string
          title: Doc Name
          default: ''
      type: object
      required:
        - dictionary_idx
      title: Dictionary
    
    
      
    ExtractorResponseType:
      type: string
      enum:
        - json
        - markdown
      title: ExtractorResponseType
    ReferencesAdaptiveResponse:
      properties:
        spec_type:
          type: string
          enum: [references] 
          title: Spec Type
          default: references
        elements:
          items:
            oneOf:
              - $ref: '#/components/schemas/kncore__extractors__models__Table'
              - $ref: '#/components/schemas/Figure'
              - $ref: '#/components/schemas/kncore__extractors__models__Section'
            discriminator:
              propertyName: role
              mapping:
                figure: '#/components/schemas/Figure'
                section: '#/components/schemas/kncore__extractors__models__Section'
                table: '#/components/schemas/kncore__extractors__models__Table'
          type: array
          title: Elements
        pages:
          items:
            $ref: '#/components/schemas/kncore__extractors__models__Page'
          type: array
          title: Pages
        dynamic_fields:
          $ref: '#/components/schemas/ReferencesDynamicFields'
        filename:
          anyOf:
            - type: string
              nullable: true
          title: Filename
        fileformat:
          anyOf:
            - type: string
              nullable: true
          title: Fileformat
      type: object
      required:
        - elements
        - pages
        - dynamic_fields
      title: ReferencesAdaptiveResponse
    PowerPointAdaptiveResponse:
      properties:
        spec_type:
          type: string
          enum: [powerpoint]
          title: Spec Type
          default: powerpoint
        elements:
          items:
            $ref: '#/components/schemas/Slide'
          type: array
          title: Elements
        pages:
          items:
            $ref: '#/components/schemas/kncore__extractors__models__Page'
          type: array
          title: Pages
        dynamic_fields:
          $ref: '#/components/schemas/PowerPointDynamicFields'
        filename:
          anyOf:
            - type: string
              nullable: true
          title: Filename
        fileformat:
          anyOf:
            - type: string
              nullable: true
          title: Fileformat
      type: object
      required:
        - elements
        - pages
        - dynamic_fields
      title: PowerPointAdaptiveResponse
    ImageAdaptiveResponse:
      properties:
        spec_type:
          type: string
          enum: [image]
          title: Spec Type
          default: image
        elements:
          items:
            $ref: '#/components/schemas/Figure'
          type: array
          title: Elements
        pages:
          items:
            $ref: '#/components/schemas/kncore__extractors__models__Page'
          type: array
          title: Pages
        dynamic_fields:
          $ref: '#/components/schemas/ImageDynamicFields'
        filename:
          anyOf:
            - type: string
              nullable: true
          title: Filename
        fileformat:
          anyOf:
            - type: string
              nullable: true
          title: Fileformat
      type: object
      required:
        - elements
        - pages
        - dynamic_fields
      title: ImageAdaptiveResponse
    StructuredResponseMarkdown:
      additionalProperties:
        type: string
      type: object
    ErrorResponse:
      properties:
        message:
          type: string
          title: Message
      type: object
      required:
        - message
      title: ErrorResponse
    Figure:
      properties:
        page_idx:
          type: integer
          title: Page Idx
        role:
          type: string
          enum: [figure]
          title: Role
          default: figure
        global_idx:
          type: integer
          title: Global Idx
        contents:
          items:
            type: string
          type: array
          title: Contents
        attributes:
          $ref: '#/components/schemas/Attributes'
        embedded_texts:
          items:
            type: string
          type: array
          title: Embedded Texts
        captions:
          items:
            type: string
          type: array
          title: Captions
      type: object
      required:
        - page_idx
        - global_idx
      title: Figure
    Attributes:
      properties:
        bounding_region:
          anyOf:
            - $ref: '#/components/schemas/BoundingBoxCoord'
            - $ref: '#/components/schemas/BoundingBoxExcel'
          nullable: true
          title: Bounding Region
        xpath:
          anyOf:
            - $ref: '#/components/schemas/XPath'
          nullable: true
        export_path:
          anyOf:
            - type: string
              format: path
              nullable: true
          title: Export Path
      type: object
      title: Attributes
    ReferencesDynamicFields:
      properties:
        xpaths:
          $ref: '#/components/schemas/XPaths'
        table_of_contents:
          anyOf:
            - type: string
              nullable: true
          title: Table Of Contents
        has_table:
          type: boolean
          title: Has Table
          default: false
      type: object
      required:
        - xpaths
      title: ReferencesDynamicFields
    Axis:
      type: string
      enum:
        - page
        - figure
        - paragraph
        - section
        - table
      title: Axis
    XStep:
      properties:
        axis:
          $ref: '#/components/schemas/Axis'
        idx:
          type: integer
          title: Idx
      type: object
      required:
        - axis
        - idx
      title: XStep
    XPaths:
      properties:
        mp_pageidx_registry:
          additionalProperties:
            $ref: '#/components/schemas/XRegistry'
          type: object
          title: Mp Pageidx Registry
      type: object
      title: XPaths
    XPath:
      properties:
        xsteps:
          items:
            $ref: '#/components/schemas/XStep'
          type: array
          minItems: 1
          title: Xsteps
        _page:
          anyOf:
            - $ref: '#/components/schemas/XStep'
          nullable: true
        _sections:
          items:
            $ref: '#/components/schemas/XStep'
          type: array
          title: Sections
      type: object
      title: XPath
    XRegistry:
      properties:
        registry:
          additionalProperties:
            additionalProperties:
              $ref: '#/components/schemas/XPath'
            type: object
          propertyNames:
            $ref: '#/components/schemas/Axis'
          type: object
          title: Registry
      type: object
      title: XRegistry
    Slide:
      properties:
        slide_idx:
          type: integer
          title: Slide Idx
        export_path:
          anyOf:
            - type: string
              format: path
              nullable: true
          title: Export Path
        contents:
          items:
            type: string
          type: array
          title: Contents
      type: object
      required:
        - slide_idx
      title: Slide
    PowerPointDynamicFields:
      properties:
        idx_metadata_slides:
          items:
            type: integer
          type: array
          title: Idx Metadata Slides
        idx_di_slides:
          items:
            type: integer
          type: array
          title: Idx Di Slides
      type: object
      title: PowerPointDynamicFields
    BoundingBoxCoord:
      properties:
        top:
          anyOf:
            - type: integer
            - type: number
          title: Top
        left:
          anyOf:
            - type: integer
            - type: number
          title: Left
        bottom:
          anyOf:
            - type: integer
            - type: number
          title: Bottom
        right:
          anyOf:
            - type: integer
            - type: number
          title: Right
      type: object
      required:
        - top
        - left
        - bottom
        - right
      title: BoundingBoxCoord
    BoundingBoxExcel:
      properties:
        top:
          anyOf:
            - type: integer
            - type: number
          title: Top
        left:
          anyOf:
            - type: integer
            - type: number
          title: Left
        bottom:
          anyOf:
            - type: integer
            - type: number
          title: Bottom
        right:
          anyOf:
            - type: integer
            - type: number
          title: Right
      type: object
      required:
        - top
        - left
        - bottom
        - right
      title: BoundingBoxExcel
    ImageDynamicFields:
      properties: {}
      type: object
      title: ImageDynamicFields
    Cell:
      properties:
        row_indices:
          items:
            type: integer
          type: array
          title: Row Indices
        col_indices:
          items:
            type: integer
          type: array
          title: Col Indices
        is_column_header:
          type: boolean
          title: Is Column Header
          default: false
        is_projected_row_header:
          type: boolean
          title: Is Projected Row Header
          default: false
        content:
          type: string
          title: Content
          default: ''
      type: object
      required:
        - row_indices
        - col_indices
      title: Cell
      
    kncore__extractors__models__Table:
      properties:
        page_idx:
          type: integer
          title: Page Idx
        role:
          type: string
          enum: [table]
          title: Role
          default: table
        global_idx:
          type: integer
          title: Global Idx
        contents:
          items:
            type: string
          type: array
          title: Contents
        attributes:
          $ref: '#/components/schemas/Attributes'
        num_column:
          type: integer
          title: Num Column
        num_row:
          type: integer
          title: Num Row
        cells:
          items:
            $ref: '#/components/schemas/Cell'
          type: array
          title: Cells
        captions:
          items:
            type: string
          type: array
          title: Captions
      type: object
      required:
        - page_idx
        - global_idx
        - num_column
        - num_row
        - cells
      title: Table
    kncore__extractors__models__Page:
      properties:
        page_idx:
          type: integer
          minimum: 0
          exclusiveMinimum: true
          title: Page Idx
        name:
          anyOf:
            - type: string
              nullable: true
          title: Name
        width:
          anyOf:
            - type: number
              nullable: true
          title: Width
        height:
          anyOf:
            - type: number
              nullable: true
          title: Height
        titles:
          items:
            type: string
          type: array
          title: Titles
        headers:
          items:
            type: string
          type: array
          title: Headers
        footers:
          items:
            type: string
          type: array
          title: Footers
        contents:
          items:
            type: string
          type: array
          title: Contents
        footnotes:
          items:
            type: string
          type: array
          title: Footnotes
        page_numbers:
          items:
            type: string
          type: array
          title: Page Numbers
        section_headings:
          additionalProperties:
            type: string
          type: object
          title: Section Headings
        attributes:
          $ref: '#/components/schemas/Attributes'
      type: object
      required:
        - page_idx
      title: Page
    kncore__extractors__models__Section:
      properties:
        page_idx:
          type: integer
          title: Page Idx
        role:
          type: string
          enum: [section]
          title: Role
          default: section
        global_idx:
          type: integer
          title: Global Idx
        contents:
          items:
            type: string
          type: array
          title: Contents
        attributes:
          $ref: '#/components/schemas/Attributes'
        paragraphs:
          items:
            type: string
          type: array
          title: Paragraphs
      type: object
      required:
        - page_idx
        - global_idx
      title: Section
    kncore__structs__datamodel__Page:
      properties:
        page_idx:
          type: integer
          title: Page Idx
          default: 0
        text:
          type: string
          title: Text
          default: ''
        reference_id:
          type: string
          title: Reference Id
          default: ''
        doc_name:
          type: string
          title: Doc Name
          default: ''
        page_number:
          type: string
          title: Page Number
          default: ''
        page_name:
          type: string
          title: Page Name
          default: ''
        page_header:
          type: string
          title: Page Header
          default: ''
        page_footer:
          type: string
          title: Page Footer
          default: ''
        title:
          type: string
          title: Title
          default: ''
        unique_idx:
          type: string
          title: Unique Idx
          default: ''
      type: object
      title: Page

  securitySchemes:
    MyHTTPBearer:
      type: http
      description: |

        Bearer Authentication, see more at [the official documentation](https://swagger.io/docs/specification/authentication/bearer-authentication/).

        The bearer token could be retrieved upon successfully logging in at [/api/v3/auth/login/](/docs#/auth/login_api_v3_auth_login__post).

        Follow these steps:
        - login at [POST /api/v3/auth/login/](/docs#/auth/login_api_v3_auth_login__post).
        - retrieve the token from the `access_token` field.
        - paste the token here, then `Authorize`.
      scheme: bearer
